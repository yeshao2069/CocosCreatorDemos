// Effect Syntax Guide: https://github.com/cocos-creator/docs-3d/blob/master/zh/material-system/effect-syntax.md

CCEffect %{
  techniques:
  - name: opaque
    passes:
    - vert: fluid-vs:vert # builtin header
      frag: fluid-fs:frag
      properties: &props
        radius: { value: 0.0 }
        yratio: { value: 0.0 }
        reverseRes: { value: [0.0, 0.0], editor: { type: vec2 } }
  - name: transparent
    passes:
    - vert: fluid-vs:vert # builtin header
      frag: fluid-fs:frag
      blendState:
        targets:
        - blend: true
          blendSrc: src_alpha
          blendDst: one_minus_src_alpha
          blendSrcAlpha: src_alpha
          blendDstAlpha: one_minus_src_alpha
      properties: *props
}%

CCProgram fluid-vs %{
  precision highp float;
  #include <cc-global>

  uniform VSARGS {
    vec2 reverseRes;
    float yratio;       // Y轴坐标需要乘以的比例，即iResolution.y / iResolution.x
  };

  in vec3 a_position;
  in vec2 a_texCoord;

  out vec2 v_corner;
  out vec2 v_center;

  vec4 vert () {
    vec4 pos = vec4(a_position.xy, 0, 1);    

    // no a_corner in web version
    // use a_position instead of a_corner
    v_corner = a_position.xy * reverseRes;
    v_center = a_texCoord.xy * reverseRes;

    v_corner.y *= yratio;
    v_center.y *= yratio;

    return cc_matViewProj * pos;
  }
}%

CCProgram fluid-fs %{
  precision highp float;
  #include <cc-global>

  uniform FSARGS {
    float radius;   // X轴方向上的半径，外部通过box2d世界大小和粒子大小计算获得
  };

  in vec2 v_corner;
  in vec2 v_center;

  vec4 frag () {
    float mask = smoothstep(radius * 3., radius, distance(v_corner, v_center));
    return vec4(1.0, 1.0, 1.0, mask);
  }
}%
